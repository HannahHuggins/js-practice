{"id":"scripts.js","dependencies":[{"name":"/Users/hugghaadmin/Documents/Apprenticeship/Revision/js-practice/package.json","includedInParent":true,"mtime":1560416311852}],"generated":{"js":"// JS and the DOM - using parentNode to traverse up the DOM\n// Dom traversal - selecting and element based on its relationship to another element within the DOM\n// Using previousElementSibling and insertbEFORE\n// NonDocumentTypeChildNode.previousElementSibling - \n\n/* previousSibling gets you the previous document node \npreviousElementSibling allows you to get the previous HTML element\n*/\n// Object-orientated js \n// class, properties and methods \n// object - info about something you want to use in the code. This contains properties and functions. \n// properties are a series of key-value pairs that hold information about the object. \n//OOP is a way of thinking about and designing a program with objects at it's core. \n// objects are an easy way to store something with properties and manipuilate something using objects. \n//------------------------------\n// JavaScript objects \n//object literals and components of objects\n// Objects are similar to arrays but denoted with {} rather than [] \n// const ernie = {\n//     animal: 'dog', //key value pairs\n//     age: 1,\n//     breed: 'pug',\n//     bark: function () {\n//         console.log('woof!'); // This is one way to add methods to object literals\n//     }\n// }\n// Encapsulation - putting properties and methods into a package and attaching it to a variable \n//---------\n// Dot notation and bracket notation - 2 ways of accessing an objects properties\n// const fruits = ['apple', 'pear', 'strawberry'];\n// fruitsLength = fruits.length; // able to access the length property of the array and return the value. \nvar ernie = {\n  animal: 'dog',\n  age: '1',\n  breed: 'pug',\n  bark: function bark() {\n    console.log(\"woof!\");\n  }\n};\nconsole.log(bernie.age);\nconsole.log(bernie.bark);\nernie.bark(); // accessing properties of an object with dot notation \n\nvar fruits = ['apple', 'pear', 'strawberry'];\nfruits[1]; // bracket notation used to access the properties of an object \n\nconsole.log(bernie['age']);\nernie['bark']();\nvar prop = \"breed\";\nernie[prop]; //able to use this now within the ernie object \n// const me = {\n//     firstName = 'Hannah',\n//     lastName = 'Dowdall',\n//     fullName = function(){\n//         console.log(this.firstName + this.lastName);\n//     }\n// }\n// changing and adding properties","map":{"mappings":[{"generated":{"line":1,"column":0},"source":"scripts.js","original":{"line":1,"column":0}},{"generated":{"line":2,"column":0},"source":"scripts.js","original":{"line":2,"column":0}},{"generated":{"line":3,"column":0},"source":"scripts.js","original":{"line":4,"column":0}},{"generated":{"line":4,"column":0},"source":"scripts.js","original":{"line":7,"column":0}},{"generated":{"line":6,"column":0},"source":"scripts.js","original":{"line":10,"column":0}},{"generated":{"line":9,"column":0},"source":"scripts.js","original":{"line":14,"column":0}},{"generated":{"line":10,"column":0},"source":"scripts.js","original":{"line":15,"column":0}},{"generated":{"line":11,"column":0},"source":"scripts.js","original":{"line":16,"column":0}},{"generated":{"line":12,"column":0},"source":"scripts.js","original":{"line":17,"column":0}},{"generated":{"line":13,"column":0},"source":"scripts.js","original":{"line":18,"column":0}},{"generated":{"line":14,"column":0},"source":"scripts.js","original":{"line":19,"column":0}},{"generated":{"line":15,"column":0},"source":"scripts.js","original":{"line":21,"column":0}},{"generated":{"line":16,"column":0},"source":"scripts.js","original":{"line":22,"column":0}},{"generated":{"line":17,"column":0},"source":"scripts.js","original":{"line":24,"column":0}},{"generated":{"line":18,"column":0},"source":"scripts.js","original":{"line":26,"column":0}},{"generated":{"line":19,"column":0},"source":"scripts.js","original":{"line":28,"column":0}},{"generated":{"line":20,"column":0},"source":"scripts.js","original":{"line":29,"column":0}},{"generated":{"line":21,"column":0},"source":"scripts.js","original":{"line":30,"column":0}},{"generated":{"line":22,"column":0},"source":"scripts.js","original":{"line":31,"column":0}},{"generated":{"line":23,"column":0},"source":"scripts.js","original":{"line":32,"column":0}},{"generated":{"line":24,"column":0},"source":"scripts.js","original":{"line":33,"column":0}},{"generated":{"line":25,"column":0},"source":"scripts.js","original":{"line":34,"column":0}},{"generated":{"line":26,"column":0},"source":"scripts.js","original":{"line":35,"column":0}},{"generated":{"line":27,"column":0},"source":"scripts.js","original":{"line":37,"column":0}},{"generated":{"line":28,"column":0},"source":"scripts.js","original":{"line":39,"column":0}},{"generated":{"line":29,"column":0},"source":"scripts.js","original":{"line":40,"column":0}},{"generated":{"line":30,"column":0},"source":"scripts.js","original":{"line":42,"column":0}},{"generated":{"line":31,"column":0},"source":"scripts.js","original":{"line":44,"column":0}},{"generated":{"line":32,"column":0},"source":"scripts.js","original":{"line":47,"column":0}},{"name":"ernie","generated":{"line":32,"column":4},"source":"scripts.js","original":{"line":47,"column":6}},{"generated":{"line":32,"column":9},"source":"scripts.js","original":{"line":47,"column":11}},{"generated":{"line":32,"column":12},"source":"scripts.js","original":{"line":47,"column":14}},{"name":"animal","generated":{"line":33,"column":0},"source":"scripts.js","original":{"line":48,"column":4}},{"name":"animal","generated":{"line":33,"column":2},"source":"scripts.js","original":{"line":48,"column":4}},{"generated":{"line":33,"column":8},"source":"scripts.js","original":{"line":48,"column":10}},{"generated":{"line":33,"column":10},"source":"scripts.js","original":{"line":48,"column":12}},{"generated":{"line":33,"column":15},"source":"scripts.js","original":{"line":47,"column":14}},{"name":"age","generated":{"line":34,"column":0},"source":"scripts.js","original":{"line":49,"column":4}},{"name":"age","generated":{"line":34,"column":2},"source":"scripts.js","original":{"line":49,"column":4}},{"generated":{"line":34,"column":5},"source":"scripts.js","original":{"line":49,"column":7}},{"generated":{"line":34,"column":7},"source":"scripts.js","original":{"line":49,"column":9}},{"generated":{"line":34,"column":10},"source":"scripts.js","original":{"line":47,"column":14}},{"name":"breed","generated":{"line":35,"column":0},"source":"scripts.js","original":{"line":50,"column":4}},{"name":"breed","generated":{"line":35,"column":2},"source":"scripts.js","original":{"line":50,"column":4}},{"generated":{"line":35,"column":7},"source":"scripts.js","original":{"line":50,"column":9}},{"generated":{"line":35,"column":9},"source":"scripts.js","original":{"line":50,"column":11}},{"generated":{"line":35,"column":14},"source":"scripts.js","original":{"line":47,"column":14}},{"name":"bark","generated":{"line":36,"column":0},"source":"scripts.js","original":{"line":51,"column":4}},{"name":"bark","generated":{"line":36,"column":2},"source":"scripts.js","original":{"line":51,"column":4}},{"generated":{"line":36,"column":6},"source":"scripts.js","original":{"line":51,"column":8}},{"generated":{"line":36,"column":8},"source":"scripts.js","original":{"line":51,"column":10}},{"generated":{"line":36,"column":24},"source":"scripts.js","original":{"line":51,"column":20}},{"name":"console","generated":{"line":37,"column":0},"source":"scripts.js","original":{"line":52,"column":8}},{"name":"console","generated":{"line":37,"column":4},"source":"scripts.js","original":{"line":52,"column":8}},{"generated":{"line":37,"column":11},"source":"scripts.js","original":{"line":52,"column":15}},{"name":"log","generated":{"line":37,"column":12},"source":"scripts.js","original":{"line":52,"column":16}},{"generated":{"line":37,"column":15},"source":"scripts.js","original":{"line":52,"column":8}},{"generated":{"line":37,"column":16},"source":"scripts.js","original":{"line":52,"column":20}},{"generated":{"line":37,"column":23},"source":"scripts.js","original":{"line":52,"column":8}},{"generated":{"line":38,"column":0},"source":"scripts.js","original":{"line":53,"column":5}},{"generated":{"line":39,"column":0},"source":"scripts.js","original":{"line":47,"column":14}},{"generated":{"line":39,"column":1},"source":"scripts.js","original":{"line":47,"column":0}},{"name":"console","generated":{"line":40,"column":0},"source":"scripts.js","original":{"line":56,"column":0}},{"generated":{"line":40,"column":7},"source":"scripts.js","original":{"line":56,"column":7}},{"name":"log","generated":{"line":40,"column":8},"source":"scripts.js","original":{"line":56,"column":8}},{"generated":{"line":40,"column":11},"source":"scripts.js","original":{"line":56,"column":0}},{"name":"bernie","generated":{"line":40,"column":12},"source":"scripts.js","original":{"line":56,"column":12}},{"generated":{"line":40,"column":18},"source":"scripts.js","original":{"line":56,"column":18}},{"name":"age","generated":{"line":40,"column":19},"source":"scripts.js","original":{"line":56,"column":19}},{"generated":{"line":40,"column":22},"source":"scripts.js","original":{"line":56,"column":0}},{"name":"console","generated":{"line":41,"column":0},"source":"scripts.js","original":{"line":57,"column":0}},{"generated":{"line":41,"column":7},"source":"scripts.js","original":{"line":57,"column":7}},{"name":"log","generated":{"line":41,"column":8},"source":"scripts.js","original":{"line":57,"column":8}},{"generated":{"line":41,"column":11},"source":"scripts.js","original":{"line":57,"column":0}},{"name":"bernie","generated":{"line":41,"column":12},"source":"scripts.js","original":{"line":57,"column":12}},{"generated":{"line":41,"column":18},"source":"scripts.js","original":{"line":57,"column":18}},{"name":"bark","generated":{"line":41,"column":19},"source":"scripts.js","original":{"line":57,"column":19}},{"generated":{"line":41,"column":23},"source":"scripts.js","original":{"line":57,"column":0}},{"name":"ernie","generated":{"line":42,"column":0},"source":"scripts.js","original":{"line":60,"column":0}},{"generated":{"line":42,"column":5},"source":"scripts.js","original":{"line":60,"column":5}},{"name":"bark","generated":{"line":42,"column":6},"source":"scripts.js","original":{"line":60,"column":6}},{"generated":{"line":42,"column":10},"source":"scripts.js","original":{"line":60,"column":0}},{"generated":{"line":42,"column":14},"source":"scripts.js","original":{"line":62,"column":0}},{"generated":{"line":44,"column":0},"source":"scripts.js","original":{"line":66,"column":0}},{"name":"fruits","generated":{"line":44,"column":4},"source":"scripts.js","original":{"line":66,"column":6}},{"generated":{"line":44,"column":10},"source":"scripts.js","original":{"line":66,"column":12}},{"generated":{"line":44,"column":13},"source":"scripts.js","original":{"line":66,"column":15}},{"generated":{"line":44,"column":14},"source":"scripts.js","original":{"line":66,"column":16}},{"generated":{"line":44,"column":21},"source":"scripts.js","original":{"line":66,"column":15}},{"generated":{"line":44,"column":23},"source":"scripts.js","original":{"line":66,"column":25}},{"generated":{"line":44,"column":29},"source":"scripts.js","original":{"line":66,"column":15}},{"generated":{"line":44,"column":31},"source":"scripts.js","original":{"line":66,"column":33}},{"generated":{"line":44,"column":43},"source":"scripts.js","original":{"line":66,"column":15}},{"generated":{"line":44,"column":44},"source":"scripts.js","original":{"line":66,"column":0}},{"name":"fruits","generated":{"line":45,"column":0},"source":"scripts.js","original":{"line":68,"column":0}},{"generated":{"line":45,"column":6},"source":"scripts.js","original":{"line":68,"column":6}},{"generated":{"line":45,"column":7},"source":"scripts.js","original":{"line":68,"column":7}},{"generated":{"line":45,"column":8},"source":"scripts.js","original":{"line":68,"column":6}},{"generated":{"line":45,"column":9},"source":"scripts.js","original":{"line":68,"column":0}},{"generated":{"line":45,"column":11},"source":"scripts.js","original":{"line":70,"column":0}},{"name":"console","generated":{"line":47,"column":0},"source":"scripts.js","original":{"line":72,"column":0}},{"generated":{"line":47,"column":7},"source":"scripts.js","original":{"line":72,"column":7}},{"name":"log","generated":{"line":47,"column":8},"source":"scripts.js","original":{"line":72,"column":8}},{"generated":{"line":47,"column":11},"source":"scripts.js","original":{"line":72,"column":0}},{"name":"bernie","generated":{"line":47,"column":12},"source":"scripts.js","original":{"line":72,"column":12}},{"generated":{"line":47,"column":18},"source":"scripts.js","original":{"line":72,"column":18}},{"generated":{"line":47,"column":19},"source":"scripts.js","original":{"line":72,"column":19}},{"generated":{"line":47,"column":24},"source":"scripts.js","original":{"line":72,"column":18}},{"generated":{"line":47,"column":25},"source":"scripts.js","original":{"line":72,"column":0}},{"name":"ernie","generated":{"line":48,"column":0},"source":"scripts.js","original":{"line":74,"column":0}},{"generated":{"line":48,"column":5},"source":"scripts.js","original":{"line":74,"column":5}},{"generated":{"line":48,"column":6},"source":"scripts.js","original":{"line":74,"column":6}},{"generated":{"line":48,"column":12},"source":"scripts.js","original":{"line":74,"column":5}},{"generated":{"line":48,"column":13},"source":"scripts.js","original":{"line":74,"column":0}},{"generated":{"line":49,"column":0},"source":"scripts.js","original":{"line":77,"column":0}},{"name":"prop","generated":{"line":49,"column":4},"source":"scripts.js","original":{"line":77,"column":4}},{"generated":{"line":49,"column":8},"source":"scripts.js","original":{"line":77,"column":8}},{"generated":{"line":49,"column":11},"source":"scripts.js","original":{"line":77,"column":11}},{"generated":{"line":49,"column":18},"source":"scripts.js","original":{"line":77,"column":0}},{"name":"ernie","generated":{"line":50,"column":0},"source":"scripts.js","original":{"line":79,"column":0}},{"generated":{"line":50,"column":5},"source":"scripts.js","original":{"line":79,"column":5}},{"name":"prop","generated":{"line":50,"column":6},"source":"scripts.js","original":{"line":79,"column":6}},{"generated":{"line":50,"column":10},"source":"scripts.js","original":{"line":79,"column":5}},{"generated":{"line":50,"column":11},"source":"scripts.js","original":{"line":79,"column":0}},{"generated":{"line":50,"column":13},"source":"scripts.js","original":{"line":79,"column":13}},{"generated":{"line":51,"column":0},"source":"scripts.js","original":{"line":82,"column":0}},{"generated":{"line":52,"column":0},"source":"scripts.js","original":{"line":83,"column":0}},{"generated":{"line":53,"column":0},"source":"scripts.js","original":{"line":84,"column":0}},{"generated":{"line":54,"column":0},"source":"scripts.js","original":{"line":85,"column":0}},{"generated":{"line":55,"column":0},"source":"scripts.js","original":{"line":86,"column":0}},{"generated":{"line":56,"column":0},"source":"scripts.js","original":{"line":87,"column":0}},{"generated":{"line":57,"column":0},"source":"scripts.js","original":{"line":88,"column":0}},{"generated":{"line":58,"column":0},"source":"scripts.js","original":{"line":91,"column":0}}],"sources":{"scripts.js":"// JS and the DOM - using parentNode to traverse up the DOM\n// Dom traversal - selecting and element based on its relationship to another element within the DOM\n\n// Using previousElementSibling and insertbEFORE\n\n\n// NonDocumentTypeChildNode.previousElementSibling - \n\n\n/* previousSibling gets you the previous document node \npreviousElementSibling allows you to get the previous HTML element\n*/\n\n// Object-orientated js \n// class, properties and methods \n// object - info about something you want to use in the code. This contains properties and functions. \n// properties are a series of key-value pairs that hold information about the object. \n//OOP is a way of thinking about and designing a program with objects at it's core. \n// objects are an easy way to store something with properties and manipuilate something using objects. \n\n//------------------------------\n// JavaScript objects \n\n//object literals and components of objects\n\n// Objects are similar to arrays but denoted with {} rather than [] \n\n// const ernie = {\n//     animal: 'dog', //key value pairs\n//     age: 1,\n//     breed: 'pug',\n//     bark: function () {\n//         console.log('woof!'); // This is one way to add methods to object literals\n//     }\n// }\n\n// Encapsulation - putting properties and methods into a package and attaching it to a variable \n\n//---------\n// Dot notation and bracket notation - 2 ways of accessing an objects properties\n\n// const fruits = ['apple', 'pear', 'strawberry'];\n\n// fruitsLength = fruits.length; // able to access the length property of the array and return the value. \n\n\nconst ernie = {\n    animal: 'dog',\n    age: '1',\n    breed: 'pug',\n    bark: function(){\n        console.log(\"woof!\");\n    }\n}\n\nconsole.log(bernie.age);\nconsole.log(bernie.bark);\n\n\nernie.bark();\n\n// accessing properties of an object with dot notation \n\n\n\nconst fruits = ['apple', 'pear', 'strawberry'];\n\nfruits[1];\n\n// bracket notation used to access the properties of an object \n\nconsole.log(bernie['age']);\n\nernie['bark']();\n\n\nvar prop = \"breed\";\n\nernie[prop]; //able to use this now within the ernie object \n\n\n// const me = {\n//     firstName = 'Hannah',\n//     lastName = 'Dowdall',\n//     fullName = function(){\n//         console.log(this.firstName + this.lastName);\n//     }\n// }\n\n\n// changing and adding properties "},"lineCount":null}},"hash":"01528cf7d4e794b83c6be3725ac63eb1","cacheData":{"env":{}}}